" .vimrc
" Author: Jorge Chato <jorgechato1@gmail.com>
" Source: https://github.com/orggue/.dotfiles
" Preamble --------------------------------------------------------------- {{{
set nocompatible                        " I'm using vim not vi
filetype off

set rtp+=~/.vim/bundle/Vundle.vim/
" set rtp+=~/.vim/c-support
call vundle#rc()

filetype plugin indent on
syntax on
" }}}

" Basic options ---------------------------------------------------------- {{{
" size of a hard tabstop
set smartindent
set tabstop=2
" a combination of spaces and tabs are used to simulate tab stops at a width
" other than the (hard)tabstop
set softtabstop=2
set smarttab
" size of an indent"
set shiftwidth=2
set noexpandtab
set encoding=utf-8
set shell=/bin/zsh
set nowrap                              " Do not wrap long lines
set number                              " Show linenumbers
set showcmd                             " Show info in the right bottom
set ttyfast
set textwidth=80
set colorcolumn=+1                      " Display margin at 81
se t_Co=256
set nocursorline                        " Do not hightlight the current line
set scrolloff=5
set sidescroll=1
set sidescrolloff=10
set formatoptions=qcrn1
set clipboard+=unnamed                  " Yanks go on clipboard instead.
set pastetoggle=<F8>
set novisualbell                        " No blinking .
set noerrorbells                        " No noise.
set lazyredraw
set autoread                            " Reload file if it's modified outside
set autowrite
set autoindent
set ruler                               " Show line and column number
set showbreak=↪
set title
" set listchars=tab:·\ ,trail:·,eol:¬,extends:❯,precedes:❮
" set listchars=tab:·\ ,trail:·,extends:❯,precedes:❮
set list
"set listchars=tab:▸\ ,eol:¬
set listchars=tab:·\ ,trail:·
" }}}

" Bundles ----------------------------------------------------------------- {{{
Plugin 'VundleVim/Vundle.vim'

Plugin 'endel/vim-github-colorscheme'
Plugin 'twerth/ir_black'
Plugin 'mattn/emmet-vim'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'Shutnik/jshint2.vim'
Plugin 'scrooloose/nerdcommenter'
Plugin 'ervandew/supertab'
Plugin 'scrooloose/syntastic'
Plugin 'godlygeek/tabular'
Plugin 'edkolev/tmuxline.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'pangloss/vim-javascript'
Plugin 'plasticboy/vim-markdown'
Plugin 'wavded/vim-stylus'
Plugin 'christoomey/vim-tmux-navigator'
Plugin 'tpope/vim-vinegar'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'davidhalter/jedi-vim'
Plugin 'jmcantrell/vim-virtualenv'
Plugin 'LaTeX-Box-Team/LaTeX-Box'
Plugin 'justinmk/vim-syntax-extra'
Plugin 'nvie/vim-flake8'
Plugin 'powerline/powerline'
Plugin 'elzr/vim-json'
" }}}

" Color scheme ------------------------------------------------------------ {{{
set term=screen-256color
se t_Co=256
let g:solarized_termcolors=256
 :colorscheme ir_black
":colorscheme github
set colorcolumn=80
" }}}

" Custom functions -------------------------------------------------------- {{{
let s:hack = 0
function! SwitchColor()
  if(s:hack == 1)
    :colorscheme ir_black
    let s:hack = 0
  else
    :colorscheme github
		let s:hack = 1
	endif
endfunction
" }}}

" Language ---------------------------------------------------------------- {{{
"spell language
:set spell spelllang=es_es
:set nospell
" }}}

" Mappings ---------------------------------------------------------------- {{{
map <F10> <esc>:call SwitchColor()<CR>
imap <F10> <esc>:call SwitchColor()<CR>
map <F7> mzgg=G`z
map <F8> <leader>cc
map <F9> <leader>cu
map <C-s> <esc>:w<CR>
imap <C-s> <esc>:w<CR>a
inoremap <F2> <C-O>za
nnoremap <F2> za
nnoremap <F3> zR
onoremap <F2> <C-C>za
vnoremap <F3> zf
nnoremap td  :tabclose<CR>
nnoremap tn :tabnew<CR>
nn <F6> :setlocal spell! spell?<CR>
" }}}

" Plugin settings --------------------------------------------------------- {{{
	"airline {{{
		let g:airline_theme='term'
		let g:airline_powerline_fonts = 1
		let g:airline#extensions#tabline#enabled = 1
		"set laststatus=2
	" }}}
	" Powerline {{{
		if !exists('g:airline_symbols')
			let g:airline_symbols = {}
		endif
	" }}}
	" Ctrl-P {{{
	" }}}
	" C-Support {{{
		let g:C_UseTool_cmake    = 'yes'
		let g:C_UseTool_doxygen = 'yes'
		let g:C_MapLeader  = ','
		" C++ compiller comment the following line to C compiler
		"let g:C_CplusCompiler
	" }}}
	" Python jadi {{{
		"let g:jedi#auto_initialization = 0
		let g:jedi#popup_on_dot = 0
		autocmd FileType python setlocal completeopt-=preview
	" }}}
	" Latex {{{
		let s:extfname = expand("%:e")
		if s:extfname ==? "tex"
  		let g:LatexBox_split_type="new"
		endif
	" }}}
" }}}

" Fold -------------------------------------------------------------------- {{{
set foldmethod=syntax
set nofoldenable
"set foldlevelstart=1

let javaScript_fold=1         " JavaScript
let perl_fold=1               " Perl
let php_folding=1             " PHP
let r_syntax_folding=1        " R
let ruby_fold=1               " Ruby
let sh_fold_enabled=1         " sh
let vimsyn_folding='af'       " Vim script
let xml_syntax_folding=1      " XML
" }}}
