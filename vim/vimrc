" .vimrc
" Author: Jorge Chato <jorgechato1@gmail.com>
" Source: https://github.com/orggue/.dotfiles
" Web:		http://jorgechato.com
" Preamble --------------------------------------------------------------- {{{
set nocompatible                        " I'm using vim not vi
"filetype off

set rtp+=~/.vim/bundle/Vundle.vim/
set rtp+=~/.vim/c-support
call vundle#rc()

filetype plugin indent on
syntax on
" }}}

" Basic options ---------------------------------------------------------- {{{
" size of a hard tabstop
set smartindent
set tabstop=2
" a combination of spaces and tabs are used to simulate tab stops at a width
" other than the (hard)tabstop
set softtabstop=2
set smarttab
" size of an indent"
set shiftwidth=2
set noexpandtab
set encoding=utf-8
set shell=/bin/zsh
set number                              " Show linenumbers
set showcmd                             " Show info in the right bottom
set ttyfast
set textwidth=80
set colorcolumn=+1                      " Display margin at 81
set t_Co=256
set nocursorline                        " Do not hightlight the current line
set scrolloff=5
set sidescroll=1
set sidescrolloff=10
set formatoptions=qcrn1
set clipboard+=unnamed                  " Yanks go on clipboard instead.
set pastetoggle=<F8>
set novisualbell                        " No blinking .
set noerrorbells                        " No noise.
set lazyredraw
set autoread                            " Reload file if it's modified outside
set autowrite
set autoindent
set ruler                               " Show line and column number
set showbreak=↪
set title
set wrap																" long text with breackline
set linebreak
set list
set listchars=tab:·\ ,trail:·,extends:❯,precedes:❮
"set listchars=tab:·\ ,trail:·,eol:↩,extends:❯,precedes:❮
set printoptions=paper:A4,syntax:n
set pfn=:h8
set penc="cp1252"
let mapleader = " "
let g:ruby_path = system('echo $HOME/.rbenv/shims')
set wildignore+=*.pyc,*.swp,*.pdf

" Backups {{{
set backupskip=/tmp/*,/private/tmp/*"
set undodir=~/.vim/tmp/undo//
set backupdir=~/.vim/tmp/backup//
set directory=~/.vim/tmp/swap//
set backup
set noswapfile
" }}}
" }}}

" Bundles ----------------------------------------------------------------- {{{
Plugin 'VundleVim/Vundle.vim'

"Themes {{{
Plugin 'orggue/vim-youcolor'
Plugin 'twerth/ir_black'
Plugin 'acarapetis/vim-colors-github'
Plugin 'zaki/zazen'
"}}}

Plugin 'danro/rename.vim'
Plugin 'mattn/emmet-vim'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'Shutnik/jshint2.vim'
Plugin 'scrooloose/nerdcommenter'
Plugin 'ervandew/supertab'
Plugin 'scrooloose/syntastic'
Plugin 'godlygeek/tabular'
Plugin 'edkolev/tmuxline.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'pangloss/vim-javascript'
Plugin 'plasticboy/vim-markdown'
Plugin 'wavded/vim-stylus'
Plugin 'christoomey/vim-tmux-navigator'
Plugin 'tpope/vim-vinegar'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'jmcantrell/vim-virtualenv'
Plugin 'LaTeX-Box-Team/LaTeX-Box'
Plugin 'justinmk/vim-syntax-extra'
Plugin 'elzr/vim-json'
Plugin 'airblade/vim-gitgutter'
Plugin 'easymotion/vim-easymotion'
Plugin 'kshenoy/vim-signature'
Plugin 'Glench/Vim-Jinja2-Syntax'
Plugin 'tpope/vim-repeat'
Plugin 'davidhalter/jedi-vim'

"Ruby {{{
Plugin 'vim-ruby/vim-ruby'
Plugin 'tpope/vim-rails'
Plugin 'tpope/vim-endwise'
" }}}
" }}}

" Plugin settings --------------------------------------------------------- {{{
" Python jedi {{{
let g:jedi#popup_on_dot = 0
autocmd FileType python setlocal completeopt-=preview
" }}}
"airline {{{
let g:airline_theme='term'
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
"set laststatus=2
if !exists('g:airline_symbols')
	let g:airline_symbols = {}
endif
" }}}
" C-Support {{{
let g:C_UseTool_cmake    = 'yes'
let g:C_UseTool_doxygen = 'yes'
let g:C_MapLeader  = ','
" C++ compiller comment the following line to C compiler
"let g:C_CplusCompiler
" }}}
" Latex {{{
let s:extfname = expand("%:e")
if s:extfname ==? "tex"
	let g:LatexBox_split_type="new"
endif
" }}}
" jshint2 {{{
set runtimepath+=~/.vim/bundle/jshint2.vim/
" }}}
" }}}

" Color scheme ------------------------------------------------------------ {{{
set term=screen-256color
let g:solarized_termcolors=256
syntax enable                           " Switch syntax highlighting on
set colorcolumn=80
" }}}

" Custom functions -------------------------------------------------------- {{{
" Switch vim theme {{{
let s:mycolors = ['youcolor', 'zazen', 'github', 'ir_black']
let s:hack = 0
function! SwitchColor()
	execute 'colorscheme '.s:mycolors[s:hack]

	if s:hack != 3
		set background=light
	endif

	"interface {{{
	hi Search cterm=underline
	" Cursor color config
	execute 'hi CursorLineNR cterm=bold ctermfg='.(s:hack % 2 != 0 ? 10 : 160)
	augroup CLNRSet
		autocmd! ColorScheme * hi CursorLineNR cterm=bold
	augroup END
	" }}}

	let s:hack = s:hack < len(s:mycolors)-1 ? s:hack+1 : 0
endfunction
" }}}
" Twiddle Case {{{
function! TwiddleCase(str)
	if a:str ==# toupper(a:str)
		let result = tolower(a:str)
	elseif a:str ==# tolower(a:str)
		let result = substitute(a:str,'\(\<\w\+\>\)', '\u\1', 'g')
	else
		let result = toupper(a:str)
	endif
	return result
endfunction
" }}}
" }}}

" Custom interface -------------------------------------------------------- {{{
set cursorline
set hlsearch
:call SwitchColor()
" }}}

" Language ---------------------------------------------------------------- {{{
"spell language
:set spell spelllang=es_es
:set nospell
" }}}

" Mappings ---------------------------------------------------------------- {{{
vnoremap ~ y:call setreg('', TwiddleCase(@"), getregtype(''))<CR>gv""Pgv
nnoremap <leader>t :bnext<CR>
nnoremap <leader>w :bd<CR>
map <F10> <esc>:call SwitchColor()<CR>
map <F7> mzgg=G'zmz
map <F8> <leader>cc
map <F9> <leader>cu
map <leader>p <esc>:CtrlPBuffer<CR>
map <C-s> <esc>:w<CR>
imap <C-s> <esc>:w<CR>a
inoremap <F2> <C-O>za
nnoremap <F2> za
nnoremap <F3> zR
onoremap <F2> <C-C>za
vnoremap <F3> zf
nnoremap td  :tabclose<CR>
nnoremap tn :tabnew<CR>
nn <F6> :setlocal spell! spell?<CR>
nnoremap cou :set nonumber!<CR>
vmap <leader>2 gj
vmap <leader>8 gk
vmap <leader>6 g$
vmap <leader>4 g^
nmap <leader>2 gj
nmap <leader>8 gk
nmap <leader>6 g$
nmap <leader>4 g^
map <Leader>f <Plug>(easymotion-sn)
omap <Leader>f <Plug>(easymotion-tn)
" }}}

" Fold -------------------------------------------------------------------- {{{
set foldmethod=syntax
set nofoldenable
"set foldlevelstart=1

let javaScript_fold=1         " JavaScript
let perl_fold=1               " Perl
let php_folding=1             " PHP
let r_syntax_folding=1        " R
let ruby_fold=1               " Ruby
let sh_fold_enabled=1         " sh
let vimsyn_folding='af'       " Vim script
let xml_syntax_folding=1      " XML
" }}}
